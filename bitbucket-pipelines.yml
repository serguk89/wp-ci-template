# These are yaml anchors, reused later
x-bash-env-steps:
  - &bash_env_export export BASH_ENV="$BITBUCKET_CLONE_DIR/.bashrc"
  - &bash_env_source source $BASH_ENV

definitions: 
  steps:
    - step: &env_vars
        name: Configure Environment Variables
        services:
            - docker
        caches:
            - docker
        script:
          - *bash_env_export
          - export CI_BRANCH=${BITBUCKET_BRANCH:-master} && echo $CI_BRANCH
          - export PR_NUMBER=$BITBUCKET_PR_ID && echo $PR_NUMBER
          - export CI_PR_URL=https://bitbucket.org/$BITBUCKET_REPO_OWNER/$BITBUCKET_REPO_SLUG/pull-requests/$BITBUCKET_PR_ID && echo $CI_PR_URL
          - export CI_BUILD_NUMBER=$BITBUCKET_BUILD_NUMBER && echo $CI_BUILD_NUMBER
          - export CI_PROJECT_USERNAME=$BITBUCKET_REPO_OWNER && echo $CI_PROJECT_USERNAME
          - export CI_PROJECT_REPONAME=$BITBUCKET_REPO_SLUG && echo $CI_PROJECT_REPONAME
          - export CI_PROJECT_NAME=$BITBUCKET_REPO_FULL_NAME && echo $CI_PROJECT_NAME
          - /build-tools-ci/scripts/set-environment
          - ./.ci/deploy/pantheon/check-terminus-env
          - echo $TERMINUS_ENV
        artifacts:
          - .bashrc
    - step: &static_test
        name: Static Tests
        services:
          - docker
        caches:
          - docker
          - composer
        script:
          - *bash_env_export
          - *bash_env_source
          - ./.ci/test/static/run
    - step: &build
        name: Build PHP
        services:
          - docker
        caches:
          - docker
          - composer
        script:
          - *bash_env_export
          - *bash_env_source
          - ./.ci/build/php
        artifacts:
          - web/**
          - vendor/**
    - step: &deploy
        name: Deploy to Pantheon
        services:
            - docker
        caches:
            - docker
        script:
          - *bash_env_export
          - *bash_env_source
          - ./.ci/deploy/pantheon/dev-multidev
        artifacts:
          - web/**
          - vendor/**
    - step: &ui_test
        name: Test Visual Regression
        image: backstopjs/backstopjs:4.1.9
        services:
            - docker
        caches:
            - docker
            - node
        script:
          - *bash_env_export
          - *bash_env_source
          - ./.ci/test/visual-regression/run
        artifacts:
          - backstop_data/**
    - step: &lighthouse_test
        name: Run Lighthouse Tests
        services:
          - docker
        script:
          - *bash_env_export
          - *bash_env_source
          - npm i -g @lhci/cli
          - ./tests/lighthouse/run
        artifacts:
          - tests/lighthouse/reports/**
    - step: &functional_test
        name: Test Behat
        services:
            - docker
        caches:
            - docker
            - composer
        script:
          - *bash_env_export
          - *bash_env_source
          - ./.ci/test/behat/initialize
          # Start headless Chrome
          - google-chrome --disable-gpu --headless --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222 --no-sandbox </dev/null &>/dev/null &
          - ./.ci/test/behat/run
        after-script:
          - *bash_env_export
          - *bash_env_source
          - ./.ci/test/behat/cleanup
        artifacts:
          - behat-screenshots/**
    - step: &happo_test
        name: Run Happo tests
        image: cypress/base:10
        services:
          - docker
        script:
          - *bash_env_export
          - *bash_env_source
          - npm install --save-dev happo-cypress cypress happo.io
          - chmod +x ./tests/geturl
          - export CYPRESS_URL=$(./tests/geturl $1)
          - yarn happo-cypress -- -- yarn cypress run
        artifacts:
          - tests/cypress/**
image: quay.io/pantheon-public/build-tools-ci:6.x

options:
  max-time: 30

pipelines:
  default:
    - step: *env_vars
    - step: *static_test
  branches:
    '{master,feature/*,bugfix/*,hotfix/*,release/*}':
      - step: *env_vars
      - parallel:
        - step: *static_test
        - step: *build
      - step: *deploy
      - step: *ui_test
      - step: *lighthouse_test
      - step: *happo_test
      - step: *functional_test
  pull-requests:
    'clu-*':
      - step: *env_vars
      - parallel:
        - step: *static_test
        - step: *build
      - step: *deploy
      - step: *ui_test
      - step: *lighthouse_test
      - step: *functional_test
  custom:
    clu:
    - step:
        name: Composer Lock Update
        services:
          - docker
        caches:
          - docker
          - composer
        script:
          - export CI_BRANCH=${BITBUCKET_BRANCH:-master} && echo $CI_BRANCH
          - export CI_BUILD_NUMBER=$BITBUCKET_BUILD_NUMBER && echo $CI_BUILD_NUMBER
          - export CI_PROJECT_USERNAME=$BITBUCKET_REPO_OWNER && echo $CI_PROJECT_USERNAME
          - export CI_PROJECT_REPONAME=$BITBUCKET_REPO_SLUG && echo $CI_PROJECT_REPONAME
          - export CI_PROJECT_NAME=$BITBUCKET_REPO_FULL_NAME && echo $CI_PROJECT_NAME
          - /build-tools-ci/scripts/set-environment
          - terminus -n auth:login --machine-token="$TERMINUS_TOKEN"
          - set -e && terminus project:clu $TERMINUS_SITE